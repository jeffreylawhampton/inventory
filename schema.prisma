generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "postgres://default:4tiUvpJmLw7a@ep-soft-voice-a4q8wmzn-pooler.us-east-1.aws.neon.tech/verceldb?pgbouncer=true&connect_timeout=15&sslmode=require"
  directUrl = "postgres://default:4tiUvpJmLw7a@ep-soft-voice-a4q8wmzn.us-east-1.aws.neon.tech/verceldb?sslmode=require"
}


model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  image     String?
  createdAt DateTime @default(now())
  items      Item[]
  categories Category[]
  locations  Location[]
}

model Location {
  id               Int        @id @default(autoincrement())
  createdAt        DateTime   @default(now())
  name             String   @unique
  user             User       @relation(fields: [userId], references: [id])
  userId           Int
  items            Item[]
  parentLocationId Int?       @map("locationId")
  parentLocation   Location?  @relation("Nesting", fields: [parentLocationId], references: [id])
  childLocations   Location[] @relation("Nesting")
}

model Image {
  id             Int           @id @default(autoincrement())
  createdAt      DateTime      @default(now())
  alt            String?
  caption        String?
  url            String?
  source         String?
  uploadId       String?
  filename       String?
  status         String?
  mimetype       String?
  originalPath   String?
  item  Item      @relation(fields: [itemId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  itemId         Int
  originalFile   OriginalFile? @relation(fields: [originalFileId], references: [id])
  originalFileId Int?
}

model Item {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  name         String
  description  String?
  value        String?
  serialNumber String?
  quantity     String?
  purchasedAt  String?
  images       Image[] 
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  categories   Category[]
  location     Location?  @relation(fields: [locationId], references: [id])
  locationId   Int?
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  name      String  @unique
  color     String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  items     Item[]
}

model OriginalFile {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  name      String?
  type      String?
  size      Int?
  Image Image[]
}
